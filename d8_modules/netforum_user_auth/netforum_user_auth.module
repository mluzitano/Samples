<?php

/**
 * @file
 * Contains netforum_user_auth.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function netforum_user_auth_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the netforum_user_auth module.
    case 'help.page.netforum_user_auth':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Automatically creates and logs in Drupal users that are able to authenticate against NetForum&#039;s CheckEWebUser method') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function netforum_user_auth_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _netforum_user_auth_login_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function netforum_user_auth_form_user_login_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _netforum_user_auth_login_form_alter($form, $form_state);
}

/**
 * Common login form alter.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function _netforum_user_auth_login_form_alter(&$form, FormStateInterface $form_state) {
  // Add help text.
  $t_args = $form['name']['#description']->getArguments();
  $form['name']['#description'] = t('Enter your @s username. You may also log on using your Netforum email address.', $t_args);

  // Add custom validators.
  $key = array_search('::validateAuthentication', $form['#validate']);
  $form['#validate'][$key] = 'netform_user_auth_core_login_authenticate_validate';
  array_splice($form['#validate'], $key + 1, 0, 'netform_user_auth_login_authenticate_validate');
}

/**
 * Login form validator.
 *  Replaces the core validator.
 */
function netform_user_auth_core_login_authenticate_validate($form, FormStateInterface $form_state) {
  // No additional validation of user credentials is needed when the uid is set.
  if (!empty($form_state->get('uid'))) {
    return;
  }
  // First, try logging in with DB values.
  $original_form = $form_state->getFormObject();
  $original_form->validateAuthentication($form, $form_state);
}

/**
 * Login form validator.
 *  Adds Netforum login handling.
 */
function netform_user_auth_login_authenticate_validate($form, FormStateInterface $form_state) {
  try {
    $account = \Drupal::service('netforum_user_auth.auth')
      ->authenticate($form_state->getValue('name'), $form_state->getValue('pass'));
    if ($account) {
      $form_state->set('uid', $account->id());
    }
  }
  catch (Exception $e) {
    \Drupal::logger('netforum_user_auth')->error('Unable to authenticate @user against Netforum. Error: %err', [
      '@user' => $form_state->getValue('name'), '%err' => $e->getMessage()
    ]);
  }
}
